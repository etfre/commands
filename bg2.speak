priority() => 2
is_active() => "baldur's gate"
on_activate() => setState(grid, screengrid.Grid()) setattr(state.grid, 'font_color', [128,128,128]) print('bg2 activate') 
on_deactivate() => keyboard.remove_delay(/numkey\d/) print('bg2 deactivate')
mouseMove(pos) => mouse.move($pos[0], $pos[1])
moveUnit(key, count) => {$key}~$count
mouseRelative(x, y) => mouse.move(int($x) * 5, int($y) * 5, false())  
doubleClick() => mouse.click() wait(.05) mouse.click()
centerPos() => [300, 300]

literal_direction := up | down | right | left
edgeNorth := north=[600, 0]
edgeEast := east=[2000, 600]
edgeSouth := south=[600, 2000]
edgeWest := west=[0, 600]
edges := <edgeNorth> | <edgeEast> | <edgeSouth> | <edgeWest>

<literal_direction> [<number>] = {$1}~$2
record macro <letter> = macro.record($1)
stop recording [<letter>] = macro.stop($1)
play <letter> = macro.play($1)
mouse right [<number>] = mouseRelative(if($1 == none(), 1, int($1)), 0)
mouse down <digit>_0- = mouseRelative(0, if($1 == none(), 1, int($1)))
mouse left <digit>_0- = mouseRelative(if($1 == none(), -1, -int($1)), 0)
mouse up <digit>_0- = mouseRelative(0, if($1 == none(), -1, -int($1)))
grid = state.grid.overlay() 
move = state.grid.overlay(click=True) 
click = mouse.click()
center mouse = mouseMove(centerPos()) 
double click = doubleClick() 
pan <edges> = mouseMove($1) 
zoom in [<number>] = '+'~$1
zoom out [<number>] = '-'~$1
toggle interface = {alt i}
f1 | f2 | f3 | f4 | f5 | f6 | f7 | f8 | f9 | f10 | f11 | f12  = {$1}
select <number> = {'shift ' $1}

go to = mouse.move(300, 300) g state.grid.overlay(click=True)
route to = mouse.move(300, 300) {alt r}  state.grid.overlay(click=True)

stop = {space} mouseMove(centerPos())